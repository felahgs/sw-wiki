name: CI Workflow

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  lint_and_format:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '22'

      - name: Cache Node.js modules
        uses: actions/cache@v3
        with:
          path: |
            node_modules
            ~/.yarn/cache # Cache Yarn artifacts
          key: node-modules-${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            node-modules-${{ runner.os }}-

      - name: Install dependencies
        run: yarn install

      - name: Run Prettier
        run: npx prettier --check .

      - name: Run ESLint
        run: npx eslint . --max-warnings=0

  tsc_check:
    runs-on: ubuntu-latest
    needs: lint_and_format
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '22'

      - name: Cache Node.js modules
        uses: actions/cache@v3
        with:
          path: |
            node_modules
            ~/.yarn/cache
          key: node-modules-${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            node-modules-${{ runner.os }}-

      - name: Install dependencies
        run: yarn install

      - name: Run TypeScript Compilation (tsc)
        run: npx tsc --noEmit

  audit:
    runs-on: ubuntu-latest
    needs: lint_and_format
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '22'

      - name: Cache Node.js modules
        uses: actions/cache@v3
        with:
          path: |
            node_modules
            ~/.yarn/cache
          key: node-modules-${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            node-modules-${{ runner.os }}-

      - name: Install dependencies
        run: yarn install

      - name: Run npm audit
        run: npm audit --production

  outdated:
    runs-on: ubuntu-latest
    needs: lint_and_format
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '22'

      - name: Cache Node.js modules
        uses: actions/cache@v3
        with:
          path: |
            node_modules
            ~/.yarn/cache
          key: node-modules-${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            node-modules-${{ runner.os }}-

      - name: Install dependencies
        run: yarn install

      - name: Check outdated dependencies
        run: npm outdated || echo "No outdated dependencies found"

  test_coverage:
    runs-on: ubuntu-latest
    needs: [lint_and_format, tsc_check]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '22'

      - name: Cache Node.js modules
        uses: actions/cache@v3
        with:
          path: |
            node_modules
            ~/.yarn/cache
          key: node-modules-${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            node-modules-${{ runner.os }}-

      - name: Install dependencies
        run: yarn install

      - name: Run tests with coverage
        run: |
          npm run test -- --coverage
